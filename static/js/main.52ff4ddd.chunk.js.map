{"version":3,"sources":["seasonadisplay.js","spinner.js","index.js"],"names":["seasonConfig","summer","text","iconName","winter","SeasonDisplay","props","lat","month","season","Date","getMonth","className","spinner","App","state","errorMessage","window","navigator","geolocation","getCurrentPosition","position","setState","coords","latitude","err","message","this","React","Component","ReactDOM","render","document","querySelector"],"mappings":"0MAGMA,G,MAAe,CACjBC,OAAS,CACLC,KAAM,uBACNC,SAAW,OAEfC,OAAS,CACLF,KAAO,qBACPC,SAAW,eAuBJE,EAZO,SAACC,GACvB,IATmBC,EAAIC,EASjBC,GATaF,EASMD,EAAMC,KATRC,GASa,IAAIE,MAAOC,YARpC,GAAKH,EAAQ,EACbD,EAAM,EAAI,SAAW,SAErBA,EAAM,EAAK,SAAW,UAID,EAERP,EAAaS,GAA9BP,EAFyB,EAEzBA,KAAKC,EAFoB,EAEpBA,SACR,OACA,yBAAKS,UAAS,yBAAsBH,IAChC,uBAAGG,UAAS,4BAAwBT,EAAxB,WAChB,4BAAKD,GACL,uBAAGU,UAAS,6BAAwBT,EAAxB,aCjBDU,EATC,WACZ,OACI,yBAAKD,UAAU,oBACX,yBAAKA,UAAU,sBAAf,iBCCLE,E,2MACFC,MAAQ,CAACR,IAAK,KAAMS,aAAc,I,mFAEb,IAAD,OAChBC,OAAOC,UAAUC,YAAYC,mBACzB,SAAAC,GAAQ,OAAI,EAAKC,SAAS,CAACf,IAAKc,EAASE,OAAOC,YAChD,SAAAC,GAAG,OAAI,EAAKH,SAAS,CAACN,aAAcS,EAAIC,c,+BAK5C,OAAIC,KAAKZ,MAAMC,eAAiBW,KAAKZ,MAAMR,IAChC,uCAAaoB,KAAKZ,MAAMC,eAE/BW,KAAKZ,MAAMC,cAAgBW,KAAKZ,MAAMR,IAC/B,kBAAC,EAAD,CAAgBA,IAAOoB,KAAKZ,MAAMR,MAGtC,kBAAC,EAAD,U,GAlBGqB,IAAMC,WAsBxBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,cAAc,W","file":"static/js/main.52ff4ddd.chunk.js","sourcesContent":["import './seasondisplay.css';\r\nimport React from 'react';\r\n\r\nconst seasonConfig = {\r\n    summer : {\r\n        text :\"Let's hit the beach!\",\r\n        iconName : 'sun'\r\n    },\r\n    winter : {\r\n        text : \"Burr it is chilly!\",\r\n        iconName : 'snowflake'\r\n    }\r\n};\r\nconst getSeason = (lat,month) => {\r\nif(month > 2 && month < 9){\r\n    return lat > 0 ? 'summer' : 'winter';\r\n}else {\r\n    return lat > 0  ? 'winter' : 'summer';\r\n}\r\n};\r\n\r\nconst SeasonDisplay = (props) =>{\r\nconst season = getSeason(props.lat, new Date().getMonth());\r\nconst {text,iconName} = seasonConfig[season];\r\n    return (\r\n    <div className = {`season-display ${season}`}>\r\n        <i className={`icon-left massive ${ iconName} icon`} />\r\n    <h1>{text}</h1>\r\n    <i className={`icon-right massive ${iconName} icon`} />\r\n    </div>\r\n    );\r\n};\r\n\r\nexport default SeasonDisplay;","import React from 'react';\r\n\r\nconst spinner = () =>{\r\n    return(\r\n        <div className=\"ui active dimmer\">\r\n            <div className=\"ui big text loader\"> Loading...</div>\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default spinner;"," import React from 'react';\r\n import ReactDOM from 'react-dom';\r\n import SeasonaDisplay from './seasonadisplay';\r\n import Spinner from './spinner';\r\n\r\n\r\n class App extends React.Component {\r\n     state = {lat: null, errorMessage: ''};\r\n\r\n     componentDidMount() {\r\n         window.navigator.geolocation.getCurrentPosition(\r\n             position => this.setState({lat: position.coords.latitude}),\r\n             err => this.setState({errorMessage: err.message})\r\n         );\r\n     }\r\n\r\n     render() {\r\n         if (this.state.errorMessage && !this.state.lat) {\r\n             return <div>Error: {this.state.errorMessage}</div>;\r\n         }\r\n         if(!this.state.errorMessage && this.state.lat) {\r\n             return <SeasonaDisplay lat = {this.state.lat}/>;\r\n         }\r\n\r\n         return <Spinner />;\r\n     }\r\n }\r\n\r\n ReactDOM.render(<App />, document.querySelector('#root'));"],"sourceRoot":""}